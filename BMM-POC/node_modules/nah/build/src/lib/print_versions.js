"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
function getVersionPrefix(version, separator) {
    const index = version.indexOf(separator);
    if (index !== -1) {
        return version.substr(0, index);
    }
    return null;
}
function groupByVersion(versions, separator) {
    return versions.reduce((result, version) => {
        const prefix = getVersionPrefix(version, separator) || "other";
        if (!result[prefix]) {
            result[prefix] = [];
        }
        result[prefix].push(version);
        return result;
    }, {});
}
function findLongestVersion(versions) {
    return versions.reduce((longest, version) => {
        if (version.length > longest) {
            return version.length;
        }
        return longest;
    }, 0);
}
function padVersion(version, longest) {
    if (version.length < longest) {
        return version + " ".repeat(longest - version.length);
    }
    return version;
}
function print(versions, separator, suffix, stdout) {
    const groups = groupByVersion(versions, separator);
    for (const group of Object.keys(groups)) {
        stdout.write(`${group}${suffix ? suffix : ""}:\n`);
        let count = 0;
        const longestVersion = findLongestVersion(groups[group]);
        for (const version of groups[group]) {
            const padded = padVersion(version, longestVersion);
            stdout.write(`\t${padded}`);
            if (++count % 4 === 0) {
                stdout.write("\n");
            }
        }
        stdout.write("\n");
    }
}
exports.default = print;
//# sourceMappingURL=print_versions.js.map