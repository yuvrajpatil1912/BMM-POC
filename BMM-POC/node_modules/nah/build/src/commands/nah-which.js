"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
const log = require("../lib/log");
const remoteStorage = require("../lib/remote_storage");
const storage = require("../lib/storage");
const resolver = require("../lib/version_resolver");
function handle(argv) {
    return __awaiter(this, void 0, void 0, function* () {
        storage.initialize();
        const ver = argv.version;
        if (!ver) {
            const current = storage.current();
            if (current) {
                return log.info(current.path);
            }
            return log.error('No version explicitly specified and no "current" version set');
        }
        try {
            const resolvedVersion = yield resolver.resolve(ver, remoteStorage);
            const v = storage.version(resolvedVersion);
            if (v) {
                return log.info(v.path);
            }
            return log.error('Version "%s" is not installed.', resolvedVersion.human);
        }
        catch (err) {
            return log.error(err.message);
        }
    });
}
exports.command = "which [version]";
exports.aliases = ["w"];
exports.desc = "Print a path to the requested version. Omit the version to get path to the \"current\" version.";
function builder(yargs) {
    yargs.usage("Usage: nah which [version]");
}
exports.builder = builder;
function handler(argv) {
    handle(argv).catch((err) => {
        log.error("An unexpected error occured: ", err);
        process.exitCode = 1;
    });
}
exports.handler = handler;
//# sourceMappingURL=nah-which.js.map